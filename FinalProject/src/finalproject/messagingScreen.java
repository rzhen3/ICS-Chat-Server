package finalproject;

import java.awt.Toolkit;
import java.awt.datatransfer.Clipboard;
import java.awt.datatransfer.StringSelection;
import java.io.IOException;
import java.io.PrintWriter;
import java.net.Socket;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;

/**
 *
 * @author Khoa
 */
public class messagingScreen extends javax.swing.JFrame {
    //normal message print using username and message format
    public void printMessage (String username, String message){
        String outputMessage = "<" + username + ">: " + message;
        //split message into individual words
        String[] arr = outputMessage.split(" "); 
        //date
        DateTimeFormatter dtf = DateTimeFormatter.ofPattern("yyyy/MM/dd HH:mm:ss");  
        LocalDateTime now = LocalDateTime.now();  
        //print date
        jTextArea1.append(dtf.format(now)+"\n");
        //space max
        int spaceR = 50;
        //for each word in message
        for (String s : arr){
            //words under 50 characters
            if (s.length()<50){
                //if there is space remaining
              if (spaceR>s.length()){
                //print the word and a space following
                jTextArea1.append(s + " ");
                //subtract word length from remaining spaces
                spaceR-= s.length()+1;
            }
            else{
                //when no space remaining, space down
                jTextArea1.append("\n" + s + " ");
                //reset spaces remaining
                spaceR=50;
                //subtract current word
                spaceR-=s.length();  
              }
            }
            
            //when word is above 50 spaces
            else{
                //break word up to chars
                String[] arr2 = s.split("");
                int i = 0;
                for (String c : arr2){
                    //print out every 50 letters of the long word
                    if(i%50!=0){
                        jTextArea1.append(c);
                        i++;
                    }
                    //when 50 word max reached, new line and continue
                    else{
                        jTextArea1.append("\n"+c);
                        i++;
                    }
                }
                //space before next word
                jTextArea1.append(" ");
            }
        }
        jTextArea1.append("\n");
    }
    
    //overloaded special printing with no formatting
    public void printMessage(String message){
        String outputMessage = message;
        //split message into individual words
        String[] arr = outputMessage.split(" "); 
        //space max
        int spaceR = 50;
        //for each word in message
        for (String s : arr){
            //words under 50 characters
            if (s.length()<50){
                //if there is space remaining
              if (spaceR>s.length()){
                //print the word and a space following
                jTextArea1.append(s + " ");
                //subtract word length from remaining spaces
                spaceR-= s.length();
            }
            else{
                //when no space remaining, space down
                jTextArea1.append("\n" + s + " ");
                //reset spaces remaining
                spaceR=50;
                //subtract current word
                spaceR-=s.length();  
              }
            }
            
            //when word is above 50 spaces
            else{
                //break word up to chars
                String[] arr2 = s.split("");
                int i = 0;
                for (String c : arr2){
                    //print out every 50 letters of the long word
                    if(i%50!=0){
                        jTextArea1.append(c);
                        i++;
                    }
                    //when 50 word max reached, new line and continue
                    else{
                        jTextArea1.append("\n"+c);
                        i++;
                    }
                }
                //space before next word
                jTextArea1.append(" ");
            }
        }
        jTextArea1.append("\n");
    }
    
    Socket myClient;
    PrintWriter output;
    public messagingScreen() {
        initComponents();
    }
    
    //used to specify a socket to connect to. cannot be done in constructor for compat. reasons
    public void setClient(Socket aClient) throws IOException{
        myClient = aClient;
        output = new PrintWriter(aClient.getOutputStream(), true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jLabel3 = new javax.swing.JLabel();
        copyButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        messageField = new javax.swing.JTextField();
        quitButton = new javax.swing.JButton();
        sendButton = new javax.swing.JButton();
        joinCode = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel3.setText("Join Code:");

        copyButton.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        copyButton.setText("Copy Code");
        copyButton.setBorder(javax.swing.BorderFactory.createCompoundBorder());
        copyButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                copyButtonActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("Message:");

        messageField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                messageFieldActionPerformed(evt);
            }
        });

        quitButton.setText("Quit");
        quitButton.setBorder(javax.swing.BorderFactory.createCompoundBorder());
        quitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quitButtonActionPerformed(evt);
            }
        });

        sendButton.setText("Send");
        sendButton.setBorder(javax.swing.BorderFactory.createCompoundBorder());
        sendButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sendButtonActionPerformed(evt);
            }
        });

        joinCode.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        joinCode.setText(Server.code);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(messageField))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(quitButton, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(sendButton, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 33, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 483, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(71, 71, 71))
            .addGroup(layout.createSequentialGroup()
                .addGap(97, 97, 97)
                .addComponent(jLabel3)
                .addGap(18, 18, 18)
                .addComponent(joinCode, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(81, 81, 81)
                .addComponent(copyButton, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(copyButton, javax.swing.GroupLayout.DEFAULT_SIZE, 29, Short.MAX_VALUE)
                    .addComponent(joinCode, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(messageField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(sendButton, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(quitButton, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    //copy the code text to device clipboard
    private void copyButtonActionPerformed(java.awt.event.ActionEvent evt) {
        StringSelection stringSelection = new StringSelection (joinCode.getText());
        Clipboard clpbrd = Toolkit.getDefaultToolkit ().getSystemClipboard ();
        clpbrd.setContents (stringSelection, null);
    }

    private void messageFieldActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
    }

    //handle client leaving
    private void quitButtonActionPerformed(java.awt.event.ActionEvent evt) {
        // Handle user leaving
        try {
            this.output.println("Left the room");
            this.myClient.close();
            this.dispose();
        } 
        catch (IOException e) {
            System.err.println("An error occurred with leaving.");
        }
    }
   
    //send text in message box to server
    private void sendButtonActionPerformed(java.awt.event.ActionEvent evt) {
        if(messageField.getText().trim().isEmpty())    return;
        output.println(messageField.getText());
    }
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(messagingScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(messagingScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(messagingScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(messagingScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
         //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new messagingScreen().setVisible(true);
            }
        });
    }}
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton copyButton;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JLabel joinCode;
    private javax.swing.JTextField messageField;
    private javax.swing.JButton quitButton;
    private javax.swing.JButton sendButton;
    // End of variables declaration//GEN-END:variables
}
